# -*- mode: snippet -*- 
# name: merge 
# key: merge	
# --

template <typename T>
vector <pair <T, T>> merge(vector<pair<T, T>> &gap) {
  int n = gap.size();
  vector <pair <T, T> > ans;
  sort(gap.begin(), gap.end());  
  T l = gap[0].first, h = gap[0].second;
  for (int i = 0; i< n; i++) {
    if (gap[i].first <= h) {
      h = max(h, gap[i].second);
    } else {
      ans.push_back(make_pair(l, h));
      l = gap[i].first, h = gap[i].second;
    } 
  }
  ans.push_back(make_pair(l, h));
  return ans;  
  //returns the merged intervals in sorted order
}