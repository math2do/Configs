# -*- mode: snippet -*- 
# name: klee 
# key: klee	
# --

// untested
template <typename T>
T klee(const vector<pair<T, T>> &a) {
  int n = a.size();
  vector<pair<T, bool>> x(n * 2);
  for (int i = 0; i < n; i++) {
    x[i * 2] = {a[i].first, false};
    x[i * 2 + 1] = {a[i].second, true};
  }
  sort(x.begin(), x.end());
  T result = 0;
  int cnt = 0;
  for (int i = 0; i < n * 2; i++) {
    if (cnt > 0) {
      result += x[i].first - x[i - 1].first;
    }
    (x[i].second) ? cnt-- : cnt++;
  }
  return result;
}

//tested
int klee(const vector<pair<int, int>> &a) {
  int n = a.size();
  vector<pair<int, bool>> x(n * 2);
  for (int i = 0; i < n; i++) {
    x[i * 2] = {a[i].first, false};
    x[i * 2 + 1] = {a[i].second, true};
  }
  sort(x.begin(), x.end());
  int result = 0;
  int cnt = 0;
  for (int i = 0; i < n * 2; i++) {
    if (i > 0 && x[i].first > x[i - 1].first && cnt > 0) {
      result += x[i].first - x[i - 1].first;
    }
    if (x[i].second) cnt--;
    else cnt++;
  }
  return result;
}
